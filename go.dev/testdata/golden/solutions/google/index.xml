<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Using Go at Google on go.dev</title>
    <link>https://go.dev/solutions/google/</link>
    <description>Recent content in Using Go at Google on go.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://go.dev/solutions/google/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Actuating Google Production: How Google’s Site Reliability Engineering Team Uses Go</title>
      <link>https://go.dev/solutions/google/sitereliability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go.dev/solutions/google/sitereliability/</guid>
      <description>Google runs a small number of very large services. Those services are powered by a global infrastructure covering everything a developer needs: storage systems, load balancers, network, logging, monitoring, and much more. Nevertheless, it is not a static system—it cannot be. Architecture evolves, new products and ideas are created, new versions must be rolled out, configs pushed, database schema updated, and more. We end up deploying changes to our systems dozens of times per second.</description>
    </item>
    
    <item>
      <title>Chrome Content Optimization Service Runs on Go</title>
      <link>https://go.dev/solutions/google/chrome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go.dev/solutions/google/chrome/</guid>
      <description>When the product Chrome comes to mind, you probably think solely of the user-installed browser. But behind the scenes, Chrome has an extensive fleet of backends. Among these is the Chrome Optimization Guide service. This service forms an important basis for Chrome&amp;rsquo;s user experience strategy, operating in the critical path for users, and is implemented in Go.
The Chrome Optimization Guide service is designed to bring the power of Google to Chrome by providing hints to the installed browser about what optimizations may be performed on a page load, as well as when they can be applied most effectively.</description>
    </item>
    
    <item>
      <title>How Google&#39;s Core Data Solutions Team Uses Go</title>
      <link>https://go.dev/solutions/google/coredata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go.dev/solutions/google/coredata/</guid>
      <description>Google&amp;rsquo;s mission is “to organize the world&amp;rsquo;s information and make it universally accessible and useful.” One of the teams responsible for organizing that information is Google’s Core Data Solutions team. The team, among other things, maintains services to index web pages across the globe. These web indexing services help support products like Google Search by keeping search results updated and comprehensive, and they’re written in Go.
In 2015, to keep up with Google’s scale, our team needed to rewrite our indexing stack from a single monolithic binary written in C++ to multiple components in a microservices architecture.</description>
    </item>
    
    <item>
      <title>How the Firebase Hosting Team Scaled With Go</title>
      <link>https://go.dev/solutions/google/firebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://go.dev/solutions/google/firebase/</guid>
      <description>The Firebase Hosting team provides static web hosting services for Google Cloud customers. They provide a static web host that sits behind a global content delivery network, and offer users tools that are easy to use. The team also develops features that range from uploading site files to registering domains to tracking usage.
Before joining Google, Firebase Hosting’s tech stack was written in Node.js. The team started to use Go when they needed to interoperate with several other Google services.</description>
    </item>
    
  </channel>
</rss>